{
  "Custom CMake Template": {
    "prefix": "cmake",
    "body": [
      "cmake_minimum_required(VERSION 3.10)",
      "project(project_name)",
      "",
      "",
      "set(CMAKE_CXX_STANDARD 20)",
      "set(CMAKE_THREAD_PREFER_PTHREAD TRUE)",
      "set(THREADS_PREFER_PTHREAD_FLAG TRUE)",
      "set(CMAKE_EXPORT_COMPILE_COMMANDS ON)",
      "",
      "# find_package(Threads REQUIRED)",
      "# find_package(OpenCV REQUIRED)",
      "# find_package(GTSAM REQUIRED)",
      "# find_package(Eigen3 REQUIRED)",
      "",
      "execute_process(",
      "  COMMAND \\${CMAKE_COMMAND} -E create_symlink \\${CMAKE_CURRENT_LIST_DIR}/build/compile_commands.json",
      "  \\${CMAKE_CURRENT_LIST_DIR}/compile_commands.json",
      ")",
      "",
      "# include(FetchContent)",
      "",
      "# FetchContent_Declare(",
      "#   googletest",
      "#   URL https://github.com/google/googletest/archive/03597a01ee50ed33e9dfd640b249b4be3799d395.zip",
      "# )",
      "# FetchContent_MakeAvailable(googletest)",
      "",
      "# FetchContent_Declare(",
      "#   Eigen3",
      "#   GIT_REPOSITORY https://gitlab.com/libeigen/eigen.git",
      "#   GIT_TAG master",
      "#   GIT_SHALLOW TRUE",
      "#   GIT_PROGRESS TRUE",
      "# )",
      "#",
      "# set(EIGEN_BUILD_DOC OFF)",
      "# set(BUILD_TESTING OFF)",
      "# set(EIGEN_BUILD_PKGCONFIG OFF)",
      "#",
      "# FetchContent_MakeAvailable(Eigen3)",
      "",
      "",
      "# include_directories(\\${Eigen3_SOURCE_DIR})",
      "# include_directories(\\${GTSAM_INCLUDE_DIR})",
      "# include_directories(\\${OpenCV_INCLUDE_DIRS})",
      "",
      "",
      "add_executable(main main.cc)",
      "",
      "# target_link_libraries(main PRIVATE \\${OpenCV_LIBS})",
      "# target_link_libraries(main PRIVATE Threads::Threads)",
      "# target_link_libraries(main PRIVATE Eigen3::Eigen)",
      "# target_link_libraries(main PRIVATE gtsam)",
      "",
      "",
      "# enable_testing()",
      "",
      "# add_executable(utest_sample utest_sample.cc)",
      "# target_link_libraries(utest_sample GTest::gtest_main)",
      "",
      "# include(GoogleTest)",
      "# gtest_discover_tests(utest_sample)"
    ],
    "description": "Custom CMake Template"
  },

  "Simple CMake Template": {
    "prefix": "cmake",
    "body": [
      "cmake_minimum_required(VERSION 3.10)",
      "project(${1:project_name})",
      "",
      "set(CMAKE_CXX_STANDARD 17)",
      "set(CMAKE_THREAD_PREFER_PTHREAD TRUE)",
      "set(THREADS_PREFER_PTHREAD_FLAG TRUE)",
      "set(CMAKE_EXPORT_COMPILE_COMMANDS ON)",
      "",
      "execute_process(",
      "  COMMAND \\${CMAKE_COMMAND} -E create_symlink \\${CMAKE_CURRENT_LIST_DIR}/build/compile_commands.json",
      "  \\${CMAKE_CURRENT_LIST_DIR}/compile_commands.json",
      ")",
      "",
      "# include_directories(\\${CMAKE_CURRENT_LIST_DIR})",
      "# include_directories(\\${CMAKE_CURRENT_LIST_DIR}/include)",
      "",
      "# add_library(library library.cpp)",
      "",
      "add_executable($2 ${2:main}.cpp)",
      "# target_link_libraries($2 PRIVATE Threads::Threads)"
    ],
    "description": "Simple CMake Template"
  },

  "CMake Unit Test": {
    "prefix": "utest",
    "body": [
      "include(GoogleTest)",
      "enable_testing()",
      "",
      "add_executable(${1:utest_name} $1.cc)",
      "target_link_libraries($1 GTest::gtest_main)",
      "",
      "gtest_discover_tests($1)"
    ],
    "description": "Unit test entry"
  },

  "CMake executable": {
    "prefix": "executable",
    "body": [
      "add_executable(${1:utest_name} $1.cc)",
      "target_link_libraries($1 PRIVATE Threads::Threads)"
    ],
    "description": "CMake executable"
  },

  "Compile Commands Export": {
    "prefix": "compile_commands",
    "body": [
      "set(CMAKE_EXPORT_COMPILE_COMMANDS ON)",
      "",
      "execute_process(",
      "  COMMAND \\${CMAKE_COMMAND} -E create_symlink \\${CMAKE_CURRENT_LIST_DIR}/build/compile_commands.json",
      "  \\${CMAKE_CURRENT_LIST_DIR}/compile_commands.json",
      ")"
    ],
    "description": "Compile commands flag"
  },

  "ROS2 Compile Commands Export": {
    "prefix": "compile_commands_ros2",
    "body": [
      "set(CMAKE_EXPORT_COMPILE_COMMANDS ON)",
      "",
      "execute_process(",
      "  COMMAND \\${CMAKE_COMMAND} -E create_symlink \\${CMAKE_CURRENT_LIST_DIR}../../build/compile_commands.json",
      "  \\${CMAKE_CURRENT_LIST_DIR}/compile_commands.json",
      ")"
    ],
    "description": "Compile commands flag for ROS2"
  },

  "ROS2 Install Dirs": {
    "prefix": "install",
    "body": [
      "install(DIRECTORY",
      "  launch",
      "  urdf",
      "  rviz",
      "  DESTINATION share/\\${PROJECT_NAME})"
    ],
    "description": "Install common directories for ROS2"
  }
}
