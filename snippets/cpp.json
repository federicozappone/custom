{
  "header guard": {
    "prefix": "header_guard",
    "body": [
      "#ifndef ${1:DEBUG}_H",
      "#define $1_H",
      "$0",
      "#endif  // $1_H"],
    "description": "Header guard"
  },

  "header": {
    "prefix": "header",
    "body": [
      "#ifndef ${1:DEBUG}_H",
      "#define $1_H",
      "",
      "namespace ${2:name} {",
      "",
      "class ${3:MyClass}",
      "{",
      "public:",
      "\t$3() = default;",
      "\t$3($3&&) = default;",
      "\t$3(const $3&) = default;",
      "\t$3& operator=($3&&) = default;",
      "\t$3& operator=(const $3&) = default;",
      "\t~$3() = default;",
      "",
      "private:",
      "};",
      "",
      "}  // namespace $2",
      "",
      "#endif  // $1_H"
    ],
    "description": "Code snippet for header with a class"
  },

  "format off": {
    "prefix": "format_off",
    "body": [
      "// clang-format off"],
    "description": "Clang format off"
  },

  "format on": {
    "prefix": "format_on",
    "body": [
      "// clang-format on"],
    "description": "Clang format on"
  }
}
