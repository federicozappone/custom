{
  "Link idl": {
    "prefix": "idl",
    "body": [
      "rosidl_get_typesupport_target(cpp_typesupport_target \"\\${PROJECT_NAME}\" \"rosidl_typesupport_cpp\")",
      "target_link_libraries(${1:main} \"\\${cpp_typesupport_target}\""
    ],
    "description": "ROS2 idl link"
  },

    "ROS2 Install Dirs": {
    "prefix": "install",
    "body": [
      "install(DIRECTORY",
      "  launch",
      "  urdf",
      "  rviz",
      "  DESTINATION share/\\${PROJECT_NAME})"
    ],
    "description": "Install common directories for ROS2"
  },

  "ROS2 Tests": {
    "prefix": "tests",
    "body": [
      "if(BUILD_TESTING)",
      "  find_package(ament_cmake_gtest REQUIRED)",
      "  ament_add_gtest(\\${PROJECT_NAME}_tutorial_test test/tutorial_test.cpp)",
      "  target_include_directories(\\${PROJECT_NAME}_tutorial_test PUBLIC",
      "    $<BUILD_INTERFACE:\\${CMAKE_CURRENT_SOURCE_DIR}/include>",
      "    $<INSTALL_INTERFACE:include>",
      "  )",
      "  ament_target_dependencies(\\${PROJECT_NAME}_tutorial_test",
      "    std_msgs",
      "  )",
      "  target_link_libraries(\\${PROJECT_NAME}_tutorial_test name_of_local_library)",
      "endif()",
      "",
      "# Add the following line to package.xml",
      "# <test_depend>ament_cmake_gtest</test_depend>"
    ],
    "description": "Add testing for ROS2"
  },

  "Compile Commands Export": {
    "prefix": "compile_commands",
    "body": [
      "set(CMAKE_EXPORT_COMPILE_COMMANDS ON)"
    ],
    "description": "Compile commands flag"
  },

  "ROS2 Library": {
    "prefix": "library",
    "body": [
      "cmake_minimum_required(VERSION 3.8)",
      "project(${1:project_name})",
      "",
      "if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES \"Clang\")",
      "  add_compile_options(-Wall -Wextra -Wpedantic)",
      "endif()",
      "",
      "set(CMAKE_EXPORT_COMPILE_COMMANDS ON)",
      "",
      "find_package(ament_cmake REQUIRED)",
      "# find_package(Eigen3 REQUIRED)",
      "# find_package(OpenCV REQUIRED)",
      "",
      "include_directories(",
      "  include",
      "  # \\${EIGEN3_INCLUDE_DIRS}",
      "  # \\${OpenCV_INCLUDE_DIRS}",
      ")",
      "",
      "add_library(${2:library_name} src/$2.cpp)",
      "ament_target_dependencies($2",
      "  # Eigen3",
      "  # OpenCV",
      ")",
      "# target_link_libraries($2 \\${EIGEN_LIBRARIES} \\${OpenCV_LIBRARIES})",
      "target_compile_options($2 PRIVATE -Wall)",
      "ament_export_targets($2 HAS_LIBRARY_TARGET)",
      "",
      "",
      "install(",
      "  DIRECTORY include/",
      "  DESTINATION include",
      ")",
      "",
      "install(",
      "  TARGETS $2",
      "  EXPORT $2",
      "  LIBRARY DESTINATION lib",
      "  ARCHIVE DESTINATION lib",
      "  RUNTIME DESTINATION bin",
      "  INCLUDES DESTINATION include",
      ")",
      "",
      "# ament_export_dependencies(Eigen3 OpenCV)",
      "ament_export_include_directories(include)",
      "ament_package()"
    ],
    "description": "Cmake definition for ROS2 library"
  },

  "ROS2 Messages Definition": {
    "prefix": "msg",
    "body": [
      "find_package(rosidl_default_generators REQUIRED)",
      "",
      "find_package(builtin_interfaces REQUIRED)",
      "find_package(geometry_msgs REQUIRED)",
      "find_package(std_msgs REQUIRED)",
      "find_package(sensor_msgs REQUIRED)",
      "",
      "set(msg_files",
      "  \"msg/${1:Sample}.msg\"",
      ")",
      "",
      "rosidl_generate_interfaces(\\${PROJECT_NAME}",
      "  \\${msg_files}",
      "  DEPENDENCIES builtin_interfaces geometry_msgs std_msgs sensor_msgs",
      ")",
      "",
      "rosidl_get_typesupport_target(cpp_typesupport_target \"\\${PROJECT_NAME}\" \"rosidl_typesupport_cpp\")",
      "target_link_libraries(${2:target} \"\\${cpp_typesupport_target}\")",
      "",
      "ament_export_dependencies(rosidl_default_runtime)"
    ],
    "description": "Cmake definitions for a package with internal messages"
  }
}
